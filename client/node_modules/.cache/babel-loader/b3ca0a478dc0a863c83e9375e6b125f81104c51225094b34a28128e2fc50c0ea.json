{"ast":null,"code":"import axios from 'axios';\n\n// Action Types\nconst ADD_CONTACT = 'ADD_CONTACT';\nconst EDIT_CONTACT = 'EDIT_CONTACT';\nconst DELETE_CONTACT = 'DELETE_CONTACT';\n\n// Action Creators\nexport const addContact = contactData => ({\n  type: ADD_CONTACT,\n  payload: contactData\n});\nexport const editContact = contactData => ({\n  type: EDIT_CONTACT,\n  payload: contactData\n});\nexport const deleteContact = contactId => ({\n  type: DELETE_CONTACT,\n  payload: contactId\n});\n\n// Asynchronous action creator to fetch initial data\nexport const fetchData = () => {\n  return async dispatch => {\n    try {\n      const response = await axios.get('http://localhost:3001/students');\n      dispatch({\n        type: 'FETCH_DATA_SUCCESS',\n        payload: response.data\n      });\n    } catch (error) {\n      console.error('Error fetching data:', error);\n      dispatch({\n        type: 'FETCH_DATA_FAILURE',\n        payload: error.message\n      });\n    }\n  };\n};\n\n// Initial State\nconst initialState = {\n  infoContacts: [],\n  loading: true,\n  error: null\n};\n\n// Reducer Function\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'FETCH_DATA_SUCCESS':\n      return {\n        ...state,\n        infoContacts: action.payload,\n        loading: false,\n        error: null\n      };\n    case 'FETCH_DATA_FAILURE':\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    case ADD_CONTACT:\n      // Handle adding contact\n      // You may want to add logic to handle adding contact\n      return state;\n    case EDIT_CONTACT:\n      // Handle editing contact\n      // You may want to add logic to handle editing contact\n      return state;\n    case DELETE_CONTACT:\n      // Handle deleting contact\n      // You may want to add logic to handle deleting contact\n      return state;\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["axios","ADD_CONTACT","EDIT_CONTACT","DELETE_CONTACT","addContact","contactData","type","payload","editContact","deleteContact","contactId","fetchData","dispatch","response","get","data","error","console","message","initialState","infoContacts","loading","reducer","state","action"],"sources":["C:/Users/hp/Desktop/ramadanProjet/client/src/Atelier3/reducer.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Action Types\r\nconst ADD_CONTACT = 'ADD_CONTACT';\r\nconst EDIT_CONTACT = 'EDIT_CONTACT';\r\nconst DELETE_CONTACT = 'DELETE_CONTACT';\r\n\r\n// Action Creators\r\nexport const addContact = (contactData) => ({\r\n    type: ADD_CONTACT,\r\n    payload: contactData\r\n});\r\n\r\nexport const editContact = (contactData) => ({\r\n    type: EDIT_CONTACT,\r\n    payload: contactData\r\n});\r\n\r\nexport const deleteContact = (contactId) => ({\r\n    type: DELETE_CONTACT,\r\n    payload: contactId\r\n});\r\n\r\n// Asynchronous action creator to fetch initial data\r\nexport const fetchData = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get('http://localhost:3001/students');\r\n            dispatch({ type: 'FETCH_DATA_SUCCESS', payload: response.data });\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n            dispatch({ type: 'FETCH_DATA_FAILURE', payload: error.message });\r\n        }\r\n    };\r\n};\r\n\r\n// Initial State\r\nconst initialState = {\r\n    infoContacts: [],\r\n    loading: true,\r\n    error: null\r\n};\r\n\r\n// Reducer Function\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_DATA_SUCCESS':\r\n            return {\r\n                ...state,\r\n                infoContacts: action.payload,\r\n                loading: false,\r\n                error: null\r\n            };\r\n        case 'FETCH_DATA_FAILURE':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case ADD_CONTACT:\r\n            // Handle adding contact\r\n            // You may want to add logic to handle adding contact\r\n            return state;\r\n        case EDIT_CONTACT:\r\n            // Handle editing contact\r\n            // You may want to add logic to handle editing contact\r\n            return state;\r\n        case DELETE_CONTACT:\r\n            // Handle deleting contact\r\n            // You may want to add logic to handle deleting contact\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,WAAW,GAAG,aAAa;AACjC,MAAMC,YAAY,GAAG,cAAc;AACnC,MAAMC,cAAc,GAAG,gBAAgB;;AAEvC;AACA,OAAO,MAAMC,UAAU,GAAIC,WAAW,KAAM;EACxCC,IAAI,EAAEL,WAAW;EACjBM,OAAO,EAAEF;AACb,CAAC,CAAC;AAEF,OAAO,MAAMG,WAAW,GAAIH,WAAW,KAAM;EACzCC,IAAI,EAAEJ,YAAY;EAClBK,OAAO,EAAEF;AACb,CAAC,CAAC;AAEF,OAAO,MAAMI,aAAa,GAAIC,SAAS,KAAM;EACzCJ,IAAI,EAAEH,cAAc;EACpBI,OAAO,EAAEG;AACb,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAC3B,OAAO,MAAOC,QAAQ,IAAK;IACvB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,gCAAgC,CAAC;MAClEF,QAAQ,CAAC;QAAEN,IAAI,EAAE,oBAAoB;QAAEC,OAAO,EAAEM,QAAQ,CAACE;MAAK,CAAC,CAAC;IACpE,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CJ,QAAQ,CAAC;QAAEN,IAAI,EAAE,oBAAoB;QAAEC,OAAO,EAAES,KAAK,CAACE;MAAQ,CAAC,CAAC;IACpE;EACJ,CAAC;AACL,CAAC;;AAED;AACA,MAAMC,YAAY,GAAG;EACjBC,YAAY,EAAE,EAAE;EAChBC,OAAO,EAAE,IAAI;EACbL,KAAK,EAAE;AACX,CAAC;;AAED;AACA,MAAMM,OAAO,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EAC9C,QAAQA,MAAM,CAAClB,IAAI;IACf,KAAK,oBAAoB;MACrB,OAAO;QACH,GAAGiB,KAAK;QACRH,YAAY,EAAEI,MAAM,CAACjB,OAAO;QAC5Bc,OAAO,EAAE,KAAK;QACdL,KAAK,EAAE;MACX,CAAC;IACL,KAAK,oBAAoB;MACrB,OAAO;QACH,GAAGO,KAAK;QACRF,OAAO,EAAE,KAAK;QACdL,KAAK,EAAEQ,MAAM,CAACjB;MAClB,CAAC;IACL,KAAKN,WAAW;MACZ;MACA;MACA,OAAOsB,KAAK;IAChB,KAAKrB,YAAY;MACb;MACA;MACA,OAAOqB,KAAK;IAChB,KAAKpB,cAAc;MACf;MACA;MACA,OAAOoB,KAAK;IAChB;MACI,OAAOA,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}