{"ast":null,"code":"import axios from 'axios';\n\n// const fetchData = async () => {\n//     try {\n//         const response = await axios.get('http://localhost:3001/students');\n//         // console.log(response.data);\n//         return response.data;\n//     } catch (error) {\n//         console.error('Error fetching data:', error);\n//         return []; // Return an empty array or handle the error as needed\n//     }\n// };\n\n// const initialState = {\n//     infoContacts: [] // Initialize with an empty array\n// };\n\n// // Fetch data asynchronously in the initialization of the reducer\n// fetchData()\n//     .then(data => {\n//         initialState.infoContacts = data;\n//     })\n//     .catch(error => {\n//         console.error('Error setting initial state:', error);\n//     });\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"AddContact\":\n      axios.post(\"http://localhost:3001/students/create\", action.payload).then(response => {\n        // Handle success if needed\n        console.log(response.data);\n      }).catch(error => {\n        // Handle error if needed\n        console.error('Error adding contact:', error);\n      });\n    case \"EditeContact\":\n      const contact = state.infoContacts.find(cn => cn.id == action.payload.id);\n      if (contact) {\n        contact.nom = action.payload.nom;\n        contact.email = action.payload.email;\n      }\n      return state;\n    case \"DetailContact\":\n      return {};\n    case \"DeleteContact\":\n      return {\n        ...state,\n        infoContacts: [...state.infoContacts.filter(n => n.id !== parseInt(action.payload))]\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["axios","reducer","state","initialState","action","type","post","payload","then","response","console","log","data","catch","error","contact","infoContacts","find","cn","id","nom","email","filter","n","parseInt"],"sources":["C:/Users/hp/Desktop/ramadanProjet/client/src/Atelier3/reducer.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// const fetchData = async () => {\r\n//     try {\r\n//         const response = await axios.get('http://localhost:3001/students');\r\n//         // console.log(response.data);\r\n//         return response.data;\r\n//     } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//         return []; // Return an empty array or handle the error as needed\r\n//     }\r\n// };\r\n\r\n// const initialState = {\r\n//     infoContacts: [] // Initialize with an empty array\r\n// };\r\n\r\n// // Fetch data asynchronously in the initialization of the reducer\r\n// fetchData()\r\n//     .then(data => {\r\n//         initialState.infoContacts = data;\r\n//     })\r\n//     .catch(error => {\r\n//         console.error('Error setting initial state:', error);\r\n//     });\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"AddContact\":\r\n            axios.post(\"http://localhost:3001/students/create\", action.payload)\r\n                .then(response => {\r\n                    // Handle success if needed\r\n                    console.log(response.data);\r\n                })\r\n                .catch(error => {\r\n                    // Handle error if needed\r\n                    console.error('Error adding contact:', error);\r\n                });\r\n\r\n\r\n        case \"EditeContact\":\r\n            const contact = state.infoContacts.find((cn) => cn.id == action.payload.id);\r\n            if (contact) {\r\n                contact.nom = action.payload.nom;\r\n                contact.email = action.payload.email;\r\n            }\r\n            return state;\r\n\r\n        case \"DetailContact\":\r\n            return {};\r\n\r\n        case \"DeleteContact\":\r\n            return { ...state, infoContacts: [...state.infoContacts.filter(n => n.id !== parseInt(action.payload))] };\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGC,YAAY,EAAEC,MAAM,KAAK;EAC9C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,YAAY;MACbL,KAAK,CAACM,IAAI,CAAC,uCAAuC,EAAEF,MAAM,CAACG,OAAO,CAAC,CAC9DC,IAAI,CAACC,QAAQ,IAAI;QACd;QACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;MAC9B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACZ;QACAJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IAGV,KAAK,cAAc;MACf,MAAMC,OAAO,GAAGb,KAAK,CAACc,YAAY,CAACC,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACC,EAAE,IAAIf,MAAM,CAACG,OAAO,CAACY,EAAE,CAAC;MAC3E,IAAIJ,OAAO,EAAE;QACTA,OAAO,CAACK,GAAG,GAAGhB,MAAM,CAACG,OAAO,CAACa,GAAG;QAChCL,OAAO,CAACM,KAAK,GAAGjB,MAAM,CAACG,OAAO,CAACc,KAAK;MACxC;MACA,OAAOnB,KAAK;IAEhB,KAAK,eAAe;MAChB,OAAO,CAAC,CAAC;IAEb,KAAK,eAAe;MAChB,OAAO;QAAE,GAAGA,KAAK;QAAEc,YAAY,EAAE,CAAC,GAAGd,KAAK,CAACc,YAAY,CAACM,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACJ,EAAE,KAAKK,QAAQ,CAACpB,MAAM,CAACG,OAAO,CAAC,CAAC;MAAE,CAAC;IAE7G;MACI,OAAOL,KAAK;EACpB;AAEJ,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}