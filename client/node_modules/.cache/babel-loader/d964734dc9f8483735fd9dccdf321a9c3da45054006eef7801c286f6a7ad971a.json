{"ast":null,"code":"const initialState = {\n  infoContacts: [{\n    id: 1,\n    nom: \"Ahmed\",\n    email: \"Ahmed@gmail.com\"\n  }, {\n    id: 2,\n    nom: \"Ahlam\",\n    email: \"Ahlam@gmail.com\"\n  }, {\n    id: 3,\n    nom: \"Said\",\n    email: \"Said@gmail.com\"\n  }]\n};\n// const initialState = {infoContacts: [\n//     {id: 1, nom: \"Ahmed\", email: \"Ahmed@gmail.com\"},\n//     {id: 2, nom: \"Ahlam\", email: \"Ahlam@gmail.com\"},\n//     {id: 3, nom: \"Said\", email: \"Said@gmail.com\"}\n// ]}\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"AddContact\":\n      return {\n        ...state,\n        infoContacts: [...state.infoContacts, action.payload]\n      };\n    case \"EditeContact\":\n      const contact = state.infoContacts.find(cn => cn.id == action.payload.id);\n      if (contact) {\n        contact.nom = action.payload.nom;\n        contact.email = action.payload.email;\n      }\n      return state;\n    case \"DetailContact\":\n      return {};\n    case \"DeleteContact\":\n      return {\n        ...state,\n        infoContacts: [...state.infoContacts.filter(n => n.id !== parseInt(action.payload))]\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","infoContacts","id","nom","email","reducer","state","action","type","payload","contact","find","cn","filter","n","parseInt"],"sources":["C:/Users/hp/Desktop/ramadanProjet/client/src/Atelier3/reducer.js"],"sourcesContent":["const initialState = {infoContacts: [\r\n    {id: 1, nom: \"Ahmed\", email: \"Ahmed@gmail.com\"},\r\n    {id: 2, nom: \"Ahlam\", email: \"Ahlam@gmail.com\"},\r\n    {id: 3, nom: \"Said\", email: \"Said@gmail.com\"}\r\n]}\r\n// const initialState = {infoContacts: [\r\n//     {id: 1, nom: \"Ahmed\", email: \"Ahmed@gmail.com\"},\r\n//     {id: 2, nom: \"Ahlam\", email: \"Ahlam@gmail.com\"},\r\n//     {id: 3, nom: \"Said\", email: \"Said@gmail.com\"}\r\n// ]}\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case \"AddContact\":\r\n            return {...state,infoContacts: [...state.infoContacts,action.payload] };\r\n            \r\n            \r\n        case \"EditeContact\":\r\n            const contact = state.infoContacts.find((cn) => cn.id == action.payload.id );\r\n            if(contact) {\r\n                contact.nom=  action.payload.nom ;\r\n                contact.email=  action.payload.email ;\r\n            }\r\n            return state;\r\n            \r\n        case \"DetailContact\":\r\n            return {};\r\n            \r\n        case \"DeleteContact\":\r\n            return {...state,infoContacts: [...state.infoContacts.filter(n=>n.id !== parseInt(action.payload))]};\r\n            \r\n        default: \r\n            return state\r\n    }\r\n\r\n}\r\nexport default reducer;"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EAACC,YAAY,EAAE,CAChC;IAACC,EAAE,EAAE,CAAC;IAAEC,GAAG,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAiB,CAAC,EAC/C;IAACF,EAAE,EAAE,CAAC;IAAEC,GAAG,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAiB,CAAC,EAC/C;IAACF,EAAE,EAAE,CAAC;IAAEC,GAAG,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAgB,CAAC;AAChD,CAAC;AACF;AACA;AACA;AACA;AACA;AACA,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EAC9C,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,YAAY;MACb,OAAO;QAAC,GAAGF,KAAK;QAACL,YAAY,EAAE,CAAC,GAAGK,KAAK,CAACL,YAAY,EAACM,MAAM,CAACE,OAAO;MAAE,CAAC;IAG3E,KAAK,cAAc;MACf,MAAMC,OAAO,GAAGJ,KAAK,CAACL,YAAY,CAACU,IAAI,CAAEC,EAAE,IAAKA,EAAE,CAACV,EAAE,IAAIK,MAAM,CAACE,OAAO,CAACP,EAAG,CAAC;MAC5E,IAAGQ,OAAO,EAAE;QACRA,OAAO,CAACP,GAAG,GAAGI,MAAM,CAACE,OAAO,CAACN,GAAG;QAChCO,OAAO,CAACN,KAAK,GAAGG,MAAM,CAACE,OAAO,CAACL,KAAK;MACxC;MACA,OAAOE,KAAK;IAEhB,KAAK,eAAe;MAChB,OAAO,CAAC,CAAC;IAEb,KAAK,eAAe;MAChB,OAAO;QAAC,GAAGA,KAAK;QAACL,YAAY,EAAE,CAAC,GAAGK,KAAK,CAACL,YAAY,CAACY,MAAM,CAACC,CAAC,IAAEA,CAAC,CAACZ,EAAE,KAAKa,QAAQ,CAACR,MAAM,CAACE,OAAO,CAAC,CAAC;MAAC,CAAC;IAExG;MACI,OAAOH,KAAK;EACpB;AAEJ,CAAC;AACD,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}